// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Band {
  id        Int      @id @default(autoincrement())
  name      String
  genre     String
  rating    Float
  status    Boolean
  theme     String
  country   String
  label     String
  link      String
  albums    Album[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
  @@index([genre])
  @@index([rating])
  @@index([country])
  @@index([genre, rating])
  @@index([country, rating])
}

model Album {
  id          Int      @id @default(autoincrement())
  name        String
  releaseYear Int
  rating      Float
  band        Band     @relation(fields: [bandId], references: [id])
  bandId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([name])
  @@index([releaseYear])
  @@index([rating])
  @@index([bandId])
  @@index([bandId, rating])
  @@index([releaseYear, rating])
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      UserRole  @default(USER)
  logs      UserLog[]
  monitored MonitoredUser?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([email])
}

model UserLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  action    String   // CREATE, READ, UPDATE, DELETE
  entity    String   // The entity being acted upon (e.g., "Band", "Album")
  entityId  Int      // The ID of the entity
  details   String?  // Additional details about the action
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([createdAt])
  @@index([action])
}

model MonitoredUser {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  reason    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
